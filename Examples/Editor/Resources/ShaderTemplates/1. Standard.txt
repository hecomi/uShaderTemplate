Shader "Raymarching/<Name>"
{

Properties
{
    [Header(PBS)]
    _Color("Color", Color) = (1.0, 1.0, 1.0, 1.0)
    _Metallic("Metallic", Range(0.0, 1.0)) = 0.5
    _Glossiness("Smoothness", Range(0.0, 1.0)) = 0.5

    [Header(Raymarching Settings)]
    _Loop("Loop", Range(1, 100)) = 30
    _MinDistance("Minimum Distance", Range(0.001, 0.1)) = 0.01
@if ShadowCaster : true
    _ShadowLoop("Shadow Loop", Range(1, 100)) = 10
    _ShadowMinDistance("Shadow Minimum Distance", Range(0.001, 0.1)) = 0.01
    _ShadowExtraBias("Shadow Extra Bias", Range(0.0, 1.0)) = 0.02
@endif

@block Properties
// _Color2("Color2", Color) = (1.0, 1.0, 1.0, 1.0)
@endblock
}

SubShader
{

Tags
{
    "RenderType" = "Opaque"
    "DisableBatching" = "True"
}

Cull <Culling=Back|Front|Off>

CGINCLUDE

@if FollowObjectScale : false
#define OBJECT_SCALE
@endif
@if DoNotOutputDepth : false
#define DO_NOT_OUTPUT_DEPTH
@endif
@if SphericalHarmonicsPerPixel : true
#define SPHERICAL_HARMONICS_PER_PIXEL
@endif
@if CameraInsideObject : false
#define CAMERA_INSIDE_OBJECT
@endif

#define DISTANCE_FUNCTION DistanceFunction
#define POST_EFFECT PostEffect
#define PostEffectOutput SurfaceOutputStandard

#include "<RaymarchingShaderDirectory>/Common.cginc"

@block DistanceFunction
inline float DistanceFunction(float3 pos)
{
    return Sphere(pos, 0.5);
}
@endblock

@block PostEffect
inline void PostEffect(RaymarchInfo ray, inout PostEffectOutput o)
{
}
@endblock

#include "<RaymarchingShaderDirectory>/Raymarching.cginc"

ENDCG

Pass
{
    Tags { "LightMode" = "Deferred" }

    Stencil
    {
        Comp Always
        Pass Replace
        Ref 128
    }

    CGPROGRAM
    #include "<RaymarchingShaderDirectory>/VertFragStandardObject.cginc"
    #pragma target 3.0
    #pragma vertex Vert
    #pragma fragment Frag
    #pragma multi_compile_prepassfinal
    #pragma multi_compile OBJECT_SHAPE_CUBE OBJECT_SHAPE_SPHERE ___
    #pragma exclude_renderers nomrt
    ENDCG
}

@if ShadowCaster
Pass
{
    Tags { "LightMode" = "ShadowCaster" }

    CGPROGRAM
    #include "<RaymarchingShaderDirectory>/VertFragShadowObject.cginc"
    #pragma target 3.0
    #pragma vertex Vert
    #pragma fragment Frag
    #pragma multi_compile_shadowcaster
    #pragma multi_compile OBJECT_SHAPE_CUBE OBJECT_SHAPE_SPHERE ___
    #pragma fragmentoption ARB_precision_hint_fastest
    ENDCG
}
@endif

}

@if FallbackToStandardShader : true
Fallback "Raymarching/Fallbacks/StandardSurfaceShader"
@else
Fallback Off
@endif

CustomEditor "Raymarching.MaterialEditor"

}